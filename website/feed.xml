<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
	<channel>
		<title>.NET in the Trenches</title>
		<description>Harvey Kandola - .NET in the Trenches</description>
		<link>http://www.collectivematters.com</link>
		
			<item>
				<title>World's First MVC4 App - Say Hello to Gemini 5</title>
				<description>&lt;p&gt;I have been speaking at events, user groups and blogging about how we switched to MVC4 while it was still in Developer Preview. Our new tech stack consists of ASP.NET MVC4, Web API, Sass and NHibernate. We re-built our Gemini product afresh and it sports a pretty unique approach to application navigation - App-Nav™. Some folks have commented this approach is Metro-esque. See for yourself.&lt;/p&gt;

&lt;h3 id='its_here'&gt;It&amp;#8217;s Here&amp;#8230;&lt;/h3&gt;

&lt;p&gt;I am delighted to say we have finally shipped Gemini 5. In summary it&amp;#8217;s an all-in-one agile tracker that covers Agile, Scrum, Help Desk, Ticketing and good old Issue Tracking. Go &lt;a href='http://www.geminiplatform.com'&gt;check it out&lt;/a&gt; and see why we got rave reviews at Microsoft TechEd!&lt;/p&gt;

&lt;p&gt;&lt;img alt='issue tracker' src='/images/first-look.png' /&gt;&lt;/p&gt;

&lt;p&gt;Gemini 4 was built over a number years on the ASP.NET WebForms 2.0 stack. We just shifted our entire tech stack to the latest from Microsoft. I will blog later why we &amp;#8220;started again&amp;#8221; even though &lt;a href='http://www.joelonsoftware.com/articles/fog0000000069.html'&gt;conventional wisdom&lt;/a&gt; says otherwise.&lt;/p&gt;

&lt;p&gt;Here is a quick breakdown of what we used to build a commercial product on top of MVC 4.&lt;/p&gt;

&lt;h3 id='user_interface'&gt;User Interface&lt;/h3&gt;

&lt;p&gt;No JQuery UI, Twitter Bootstrap or third party widgets. Everything in the UI was either home-grown or carefully hand-picked to work with our MVC4 web app.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://harvesthq.github.com/chosen/'&gt;Chosen&lt;/a&gt; - probably the best dropdown, data selector control&lt;/li&gt;

&lt;li&gt;&lt;a href='http://jscrollpane.kelvinluck.com/'&gt;jScrollPane&lt;/a&gt; - nice, neat custom scrollbar library&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.jacklmoore.com/colorbox'&gt;Colorbox&lt;/a&gt; - safe and easy lightbox plugin&lt;/li&gt;

&lt;li&gt;&lt;a href='https://code.google.com/p/dynatree/'&gt;Dynatree&lt;/a&gt; - which app doesn&amp;#8217;t need a tree control?!&lt;/li&gt;

&lt;li&gt;&lt;a href='http://omnipotent.net/jquery.sparkline/#s-about'&gt;Micro-charting&lt;/a&gt; - nice little micro-charting library&lt;/li&gt;

&lt;li&gt;&lt;a href='https://github.com/valums/file-uploader'&gt;File Uploader&lt;/a&gt; - cross-browser ajax file uploader&lt;/li&gt;

&lt;li&gt;&lt;a href='http://fgnass.github.com/spin.js/'&gt;Spin.js&lt;/a&gt; - customizable Javascript based progress indicators&lt;/li&gt;

&lt;li&gt;&lt;a href='http://arshaw.com/fullcalendar/'&gt;Full Calendar&lt;/a&gt; - Outlook style calendar control&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.eyecon.ro/'&gt;Date Picker / Color Picker&lt;/a&gt; - basic common picker controls&lt;/li&gt;

&lt;li&gt;&lt;a href='http://labs.abeautifulsite.net/archived/jquery-contextMenu/demo/'&gt;Context Menu&lt;/a&gt; - cross-browser right-click goodness&lt;/li&gt;

&lt;li&gt;&lt;a href='http://sass-lang.com/'&gt;Sass&lt;/a&gt; - if your not using Sass or Less for CSS dev then you are doing it wrong&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We must have tested out 100+ UI widget controls and libraries – most failed the cross-browser, usability and the &amp;#8220;can I get it to easily integrate&amp;#8221; test.&lt;/p&gt;

&lt;h3 id='middleware'&gt;Middleware&lt;/h3&gt;

&lt;p&gt;It&amp;#8217;s dead simple:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Razor View Engine - it works well but the generated views still have too much whitespace for the time being&lt;/li&gt;

&lt;li&gt;Just regular Controllers but with a design rule that put Ajax actions into separate Controllers from actions that return Views. It&amp;#8217;s better from a maintenance and processing cycle view-point&lt;/li&gt;

&lt;li&gt;Application caching is just based on regular ASP.NET Cache with an option to leverage Redis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt='file structure' src='/images/first-structure.png' /&gt;&lt;/p&gt;

&lt;p&gt;We simply used the framework as-is with the usual mix of Design Patterns and best practices (e.g. using &lt;a href='http://unity.codeplex.com'&gt;Unity&lt;/a&gt; for Dependency Injection (because it works on Medium Trust as well)).&lt;/p&gt;

&lt;h3 id='data_persistence'&gt;Data Persistence&lt;/h3&gt;

&lt;p&gt;We work to support any edition of SQL thanks to our decision to stick with NHibernate. It just works with options for performance tuning and so don&amp;#8217;t discount using an ORM such as NHibernate or Entity Framework. Cut through the FUD and do what works best for you.&lt;/p&gt;

&lt;p&gt;Simple mapping files are all we need to define persistence.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Hibernate' src='/images/first-hbm.png' /&gt;&lt;/p&gt;

&lt;p&gt;Who says you cannot get ORM to scale and into commercial products?!&lt;/p&gt;

&lt;h3 id='product_api'&gt;Product API&lt;/h3&gt;

&lt;p&gt;We you build a commercial product the chances are people will want to integrate and extend in ways that you will not even dream up. Cue your product&amp;#8217;s API strategy.&lt;/p&gt;

&lt;p&gt;We built our API in just two days using the awesome ASP.NET Web API framework and the equally useful RestSharp library.&lt;/p&gt;

&lt;h3 id='and_finding_another_way_to_navigate'&gt;&amp;#8230;And Finding Another Way To Navigate&lt;/h3&gt;

&lt;p&gt;Tired of clunky, same-old navigation? I am.&lt;/p&gt;

&lt;p&gt;I challenged the UI guys to come up with something more intuitive that actually put users in control.&lt;/p&gt;

&lt;p&gt;How about you kill all top-line navigation and instead allow users to pin, share and navigate using Cards/Tiles? Bake in badge notifications to let you know when things change and you&amp;#8217;ve killed off email at the same time.&lt;/p&gt;

&lt;p&gt;&lt;img alt='AppNav' src='/images/first-appnav.png' /&gt;&lt;/p&gt;

&lt;p&gt;Hope something here helps someone, someday.&lt;/p&gt;

&lt;p&gt;Want to see MVC4 in action? &lt;a href='http://www.geminiplatform.com'&gt;Head over here.&lt;/a&gt;&lt;/p&gt;</description>
				<published>2012-09-04 00:00:00 +0100</published>
				<link>http://www.collectivematters.com/2012/09/say-hello-to-gemini-5-worlds-first-mvc-4-app</link>
			</item>
		
			<item>
				<title>Consuming ASP.NET Web API with RestSharp</title>
				<description>&lt;p&gt;So you&amp;#8217;ve built your restful web services using the new ASP.NET Web API stack.&lt;/p&gt;

&lt;p&gt;But how do you consume those web services from other .NET applications? You could use the regular &lt;a href='http://blogs.msdn.com/b/henrikn/archive/2012/02/16/httpclient-is-here.aspx'&gt;HttpClient&lt;/a&gt; framework class or leverage my favorite rest client library: &lt;a href='http://restsharp.org'&gt;RestSharp&lt;/a&gt; from &lt;a href='http://twitter.com/johnsheehan'&gt;Jon Sheehan&lt;/a&gt; (of Twilio fame).&lt;/p&gt;

&lt;h3 id='the_objective'&gt;The Objective&lt;/h3&gt;

&lt;p&gt;We need a simple .NET library that can be used by Web Form or WinForm applications that wish to invoke our new ASP.NET Web API services in a RESTful manner. Most applications will require some sort of authentication and so we will need to pass user credentials when calling a web service method.&lt;/p&gt;

&lt;p&gt;This is not as simple as it seems because as an ISV we have to support Windows authentication and handle those situations where the &amp;#8220;corporate&amp;#8221; IIS box does not allow PUT/DELETE requests to hit the server (kinda kills the notion of REST!).&lt;/p&gt;

&lt;h3 id='connecting_to_a_aspnet_web_api_endpoint'&gt;Connecting to a ASP.NET Web API Endpoint&lt;/h3&gt;

&lt;p&gt;RestSharp makes it dead simple to point towards your Web API (e.g. http://server/app/api/method).&lt;/p&gt;

&lt;p&gt;So here is our endpoint in our ApiController:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest method' src='/images/rest-method.png' /&gt;&lt;/p&gt;

&lt;p&gt;And this is what is looks like from the client side that is consuming the web service endpoint:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest call' src='/images/rest-call.png' /&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s simple. Allow any .NET application to invoke our web services with a couple of lines of code.&lt;/p&gt;

&lt;h3 id='enter_restsharp'&gt;Enter RestSharp&lt;/h3&gt;

&lt;p&gt;So what&amp;#8217;s the &amp;#8220;glue&amp;#8221; that allows any .NET application to talk to web services built using the ASP.NET Web API?&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest service' src='/images/rest-service.png' /&gt;&lt;/p&gt;

&lt;p&gt;The above represents our &amp;#8220;proxy&amp;#8221; class that leverages RestSharp to call web service endpoints. Note how we specify the endpoint URL passing in our REST resource parameters (e.g. /api/types/123).&lt;/p&gt;

&lt;p&gt;The RestRequest object is all we need to invoke any web service method.&lt;/p&gt;

&lt;h3 id='accept__content_type_headers'&gt;Accept &amp;amp; Content Type Headers&lt;/h3&gt;

&lt;p&gt;Once we have the RestRequest object we should allow the data format for inbound (Accept) and outbound (Content types to be specified as desired. Usually XML is what most people send down the wire but JSON works as well.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest headers' src='/images/rest-headers.png' /&gt;&lt;/p&gt;

&lt;h3 id='http_verb_overrides_for_not_so_restful_situations'&gt;Http Verb Overrides (for not so RESTful situations)&lt;/h3&gt;

&lt;p&gt;RESTful means leveraging GET/POST/PUT/DELETE verbs to convey the type of action we want to perform. But what happens when you come up against &amp;#8220;corporate IT&amp;#8221; when they disallow PUT and DELETE verbs? Isn&amp;#8217;t your nice REST API dead in the water?&lt;/p&gt;

&lt;p&gt;On the client side we can simply re-route PUT and DELETE verbs as POSTs:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest re-route' src='/images/rest-reroute.png' /&gt;&lt;/p&gt;

&lt;p&gt;But how would you know on the client side if the server disallows PUT or DELETE verbs? Just add some test methods (TestApiController?) as part of your implementation so clients can check to see if the server accepts PUTs and DELETEs.&lt;/p&gt;

&lt;p&gt;The great thing with ASP.NET Web API is that we can simply plug our own logic into the processing pipeline to handle this situation. On the server we need to intercept requests using a simple HTTP Message Handler to detect and re-route certain POST requests (marked as X-HTTP-Method-Override) to what they should be (PUTs or DELETEs).&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest handler' src='/images/rest-handler.png' /&gt;&lt;/p&gt;

&lt;p&gt;We can then simply wire up the above handler into the ASP.NET Web API pipeline:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest handler' src='/images/rest-handlerwire.png' /&gt;&lt;/p&gt;

&lt;p&gt;I couldn&amp;#8217;t stress how simple the ASP.NET guys have made things for ISV&amp;#8217;s like us who have to cater for all sorts of curve balls. Kudos to them!&lt;/p&gt;

&lt;h3 id='authentication'&gt;Authentication&lt;/h3&gt;

&lt;p&gt;Securing calls to web services is best practice if not mandatory in most enterprise scenarios. Thankfully RestSharp provides authenticator classes out of the box that can help you send user credentials with every REST call.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest auth' src='/images/rest-auth.png' /&gt;&lt;/p&gt;

&lt;p&gt;On the server side you can again leverage HTTP Message Handlers to wire up your custom authentication checks into the ASP.NET Web API pipeline:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Rest auth' src='/images/rest-authhandler.png' /&gt;&lt;/p&gt;

&lt;p&gt;Using the above approach we managed to move our proprietary REST API codebase onto ASP.NET Web API stack in a couple of days. Big shout to Jon Sheehan for his RestSharp library.&lt;/p&gt;

&lt;h3 id='further_reading__resources'&gt;Further Reading &amp;amp; Resources&lt;/h3&gt;

&lt;p&gt;Some useful resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://restsharp.org'&gt;RestSharp&lt;/a&gt; – simple REST and HTTP API Client for .NET&lt;/li&gt;

&lt;li&gt;Henrik F Nielsen is the ASP.NET Web API architect and has a &lt;a href='http://blogs.msdn.com/b/henrikn'&gt;treasure trove&lt;/a&gt; of Web API stuff on his blog&lt;/li&gt;

&lt;li&gt;Fantastic summary of HTTP Message Handlers from &lt;a href='http://www.asp.net/web-api/overview/working-with-http/http-message-handlers'&gt;Mike Wasson&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://fiddler2.com/fiddler2'&gt;Fiddler tool&lt;/a&gt; – super helpful for testing out our your Web API stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy resting.&lt;/p&gt;</description>
				<published>2012-04-30 00:00:00 +0100</published>
				<link>http://www.collectivematters.com/2012/04/consuming-asp-net-web-api-with-restsharp</link>
			</item>
		
			<item>
				<title>Optimizing Your Web App To The Max</title>
				<description>&lt;p&gt;One of my previous posts talked about how we dropped CMS and re-built one of our product sites using ASP.NET MVC4. The objective was performance and so we leveraged Yahoo! YSlow to guide us towards a &amp;#8216;Grade A&amp;#8217; rating.&lt;/p&gt;

&lt;p&gt;But what about &amp;#8216;UI&amp;#8217; performance when you are building your application on top of a framework like ASP.NET MVC4? Sure, we can use the same tricks and leverage things like CDN - but there are other considerations when you are building products (a web app) beyond CDN usage.&lt;/p&gt;

&lt;h3 id='kill_all_images'&gt;Kill All Images&lt;/h3&gt;

&lt;p&gt;You&amp;#8217;re joking right?&lt;/p&gt;

&lt;p&gt;Images are needed if you want to put up a toolbar, print icon, or nice gradient backgrounds to make your web app more appealing.&lt;/p&gt;

&lt;p&gt;But there is a way you can build a killer UI and yet use no images. No joke.&lt;/p&gt;

&lt;h3 id='the_toolbox'&gt;The Toolbox&lt;/h3&gt;

&lt;p&gt;Tools required to get the job done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open source &lt;a href='http://inkscape.org'&gt;Inkscape&lt;/a&gt; tool for creating &amp;#8216;icon&amp;#8217; fonts&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.fontsquirrel.com/fontface/generator'&gt;Font Squirrel Generator&lt;/a&gt; to generate web embeddable fonts&lt;/li&gt;

&lt;li&gt;&lt;a href='http://colorzilla.com/gradient-editor'&gt;ColorZilla&lt;/a&gt; CSS gradient editor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;#8217;s see how we can use these tools.&lt;/p&gt;

&lt;h3 id='it_all_starts_with_fonts'&gt;It All Starts With Fonts&lt;/h3&gt;

&lt;p&gt;All modern browsers (actually from IE6 onwards) have the ability to download extra fonts from your web server and use them as required. Most browsers (IE8+) support the CSS 2.1 pseudo selector :after which is required for the CSS only approach detailed below.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s why people like Typekit exist - pick a nice font and use it for your web site knowing full well that on first-access, the browser will suck down the required fonts.&lt;/p&gt;

&lt;p&gt;You can specify your custom fonts using such stylesheet code:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Include font files' src='/images/glyphs-include.png' /&gt;&lt;/p&gt;

&lt;h3 id='representing_icons_with_font'&gt;Representing Icons With Font&lt;/h3&gt;

&lt;p&gt;Using our own font in a MVC4 web app means we can explore a method to represent icons using our own custom font.&lt;/p&gt;

&lt;p&gt;A typical web app may use icons for things like &amp;#8220;print&amp;#8221;, &amp;#8220;save&amp;#8221;, &amp;#8220;edit&amp;#8221;, pager controls, social tools and plenty more.&lt;/p&gt;

&lt;p&gt;The objective is to really kill off those image files so that our MVC4 webpage does not even request any image assets.&lt;/p&gt;

&lt;p&gt;So how on earth can you remove all those pesky &amp;#8220;print&amp;#8221;, &amp;#8220;save&amp;#8221; icons from my web app? Use a font that contains your icons.&lt;/p&gt;

&lt;p&gt;Here is an example of where we have built a toolbar using this approach:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Common icons' src='/images/glyphs-commonicons.png' /&gt;&lt;/p&gt;

&lt;p&gt;No images, all CSS with a custom font that contains representations of our required icons.&lt;/p&gt;

&lt;p&gt;If you have no images then this could reduce the need to use CSS sprites, image squishers and potentially tools like Matt Wrock&amp;#8217;s &lt;a href='http://requestreduce.com'&gt;RequestReduce&lt;/a&gt; (truly an amazing tool, BTW).&lt;/p&gt;

&lt;h3 id='build_your_own_icon_font'&gt;Build Your Own &amp;#8220;Icon&amp;#8221; Font&lt;/h3&gt;

&lt;p&gt;We use the excellent open source Inkscape tool to generate the initial SVG font file.&lt;/p&gt;

&lt;p&gt;You simply design your icon and assign it to alpha-numeric in your font layout. For example, lower case &amp;#8220;t&amp;#8221; is used to represent a star icon (glyph).&lt;/p&gt;

&lt;p&gt;&lt;img alt='Star icon' src='/images/glyphs-star.png' /&gt;&lt;/p&gt;

&lt;p&gt;You can then go ahead and design all your icons and bind them to different glyphs in your font.&lt;/p&gt;

&lt;p&gt;&lt;img alt='All icons' src='/images/glyphs-icons.png' /&gt;&lt;/p&gt;

&lt;p&gt;Inkscape will simply save your work as a SVG file format.&lt;/p&gt;

&lt;h3 id='make_your_font_ready_for_web_embedding'&gt;Make Your Font Ready For Web Embedding&lt;/h3&gt;

&lt;p&gt;Now we can use the &lt;a href='http://www.fontsquirrel.com/fontface/generator'&gt;Font Squirrel @font-face Generator&lt;/a&gt; to simply crunch our SVG file and give us some web embeddable fonts for use in our MVC4 project.&lt;/p&gt;

&lt;p&gt;Just select your .SVG file and then click the &lt;strong&gt;&amp;#8220;Download You Kit&amp;#8221;&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Download font kit' src='/images/glyphs-downloadkit.png' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Tip: when you click &amp;#8220;Add Fonts&amp;#8221; you will notice the file upload will not select .SVG files - just type in the name of your SVG file and continue.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id='preview_your_web_embeddable_font'&gt;Preview Your Web Embeddable Font&lt;/h3&gt;

&lt;p&gt;The kit you download will contain everything you need.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Kit files' src='/images/glyphs-files.png' /&gt;&lt;/p&gt;

&lt;p&gt;Just fire up the .html file and see how your icons look as represented by your new font. All your icons will be mapped to characters such as &amp;#8220;a&amp;#8221;.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Glyphs chart' src='/images/glyphs-chart.png' /&gt;&lt;/p&gt;

&lt;h3 id='referencing_your_web_embeddable_font'&gt;Referencing Your Web Embeddable Font&lt;/h3&gt;

&lt;p&gt;Place your web embeddable font inside your MVC4 solution like any other asset:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Glyphs assets' src='/images/glyphs-assets.png' /&gt;&lt;/p&gt;

&lt;p&gt;We simply consume the font through stylesheet code:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Glyphs css' src='/images/glyphs-css.png' /&gt;&lt;/p&gt;

&lt;h3 id='using_your_web_embeddable_font'&gt;Using Your Web Embeddable Font&lt;/h3&gt;

&lt;p&gt;And now the fun part - making use of our icon font to display images.&lt;/p&gt;

&lt;p&gt;We need to generate some stylesheet code that can be used to display icons in our MVC4 web app.&lt;/p&gt;

&lt;p&gt;This class is using our custom web embeddable font:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Glyphs fonticon' src='/images/glyphs-fonticon.png' /&gt;&lt;/p&gt;

&lt;p&gt;Did you spot the &amp;#8220;voodoo&amp;#8221; syntax above? We are saying that this style matches any element that has a CSS class attached which starts with &amp;#8220;fonticon-&amp;#8220;. This selector has been around since the days of IE6.&lt;/p&gt;

&lt;p&gt;And now we can define a CSS class that extends this rule on a per icon type. In this case lower case &amp;#8220;b&amp;#8221; is our &amp;#8220;help&amp;#8221; icon.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Glyphs fonticon' src='/images/glyphs-fonticon2.png' /&gt;&lt;/p&gt;

&lt;p&gt;Finally, lets put &amp;#8220;icons&amp;#8221; on the webpage:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Using Glyphs' src='/images/glyphs-useit.png' /&gt;&lt;/p&gt;

&lt;p&gt;&amp;#8230;and this will result in:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Using Glyph result' src='/images/glyphs-result.png' /&gt;&lt;/p&gt;

&lt;p&gt;And because our icons are represented through a font, we can change the color and size as required using CSS attributes like &lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font-size&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Using Glyph result' src='/images/glyphs-result2.png' /&gt;&lt;/p&gt;

&lt;p&gt;There is simply no need to produce different images files for various image sizes or colors.&lt;/p&gt;

&lt;h3 id='killing_off_gradient_images_too'&gt;Killing off Gradient Images Too&lt;/h3&gt;

&lt;p&gt;Background style gradient images are typically used to make web app&amp;#8217;s look pretty.&lt;/p&gt;

&lt;p&gt;But we can also replace these images with CSS equivalents using &lt;a href='http://colorzilla.com/gradient-editor'&gt;ColorZilla&lt;/a&gt;. It&amp;#8217;s possible to generate via CSS most effects that you would normally produce in Photoshop.&lt;/p&gt;

&lt;p&gt;&lt;img alt='gradient' src='/images/glyphs-gradient.png' /&gt;&lt;/p&gt;

&lt;h3 id='summary'&gt;Summary&lt;/h3&gt;

&lt;p&gt;You can build a web app using MVC4 or Web Forms that uses no images but looks awesome.&lt;/p&gt;

&lt;p&gt;Pure CSS. Zero images. Reduced web requests, Faster web app.&lt;/p&gt;

&lt;p&gt;Hope this helps you at some point and you should also check out Scott Hanselman&amp;#8217;s &lt;a href='http://www.hanselman.com/blog/TheImportanceAndEaseOfMinifyingYourCSSAndJavaScriptAndOptimizingPNGsForYourBlogOrWebsite.aspx'&gt;post on optimization.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id='download'&gt;Download&lt;/h3&gt;

&lt;p&gt;&lt;a href='http://www.geminiplatform.com/downloads/blog/countersoft-iconfont.zip'&gt;Download&lt;/a&gt; the Countersoft icon font sample complete with sample HTML and CSS.&lt;/p&gt;</description>
				<published>2012-02-07 00:00:00 +0000</published>
				<link>http://www.collectivematters.com/2012/02/optimizing-your-mvc4-app-to-the-max</link>
			</item>
		
			<item>
				<title>Solving Real-world Theming Challenges with MVC4 and Sass</title>
				<description>&lt;p&gt;Theming or skinning support within your application is great - users love to make an app their own.&lt;/p&gt;

&lt;p&gt;ASP.NET Web Forms has theming baked in and it&amp;#8217;s a snap to adopt. We did this for years with one of our products and you would be surprised at how many enterprise customers leveraged ASP.NET Themes to skin the app to match their corporate colors. Dead simple.&lt;/p&gt;

&lt;p&gt;Then along came ASP.NET MVC and no more out-of-the-box theming support because the focus is on CSS. This is not a big deal if you Stop-Think-Structure your web application in the right way. And let&amp;#8217;s not forget about the HTML5/CSS3 wave and the whole notion of responsive web design to support mobile devices.&lt;/p&gt;

&lt;p&gt;Let&amp;#8217;s see how we can try to build structured theming support working with MVC4 and Sass.&lt;/p&gt;

&lt;h3 id='core_development_toolbox'&gt;Core Development Toolbox&lt;/h3&gt;

&lt;p&gt;What you need to get the Theming job done.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://sass-lang.com'&gt;Sass&lt;/a&gt; for creating your stylesheets&lt;/li&gt;

&lt;li&gt;Mindscape &lt;a href='http://visualstudiogallery.msdn.microsoft.com/2b96d16a-c986-4501-8f97-8008f9db141a'&gt;Web Workbench&lt;/a&gt; for automatic Sass stylesheet compilation&lt;/li&gt;

&lt;li&gt;Andy Webber&amp;#8217;s &lt;a href='http://css3gen.com'&gt;Css3Gen&lt;/a&gt; tool for quickly generating box\text shadows and border radius effects&lt;/li&gt;

&lt;li&gt;Mad Kristensen&amp;#8217;s &lt;a href='http://visualstudiogallery.msdn.microsoft.com/6ed4c78f-a23e-49ad-b5fd-369af0c2107f'&gt;Web Essentials&lt;/a&gt; Visual Studio extension for handy CSS editing&lt;/li&gt;

&lt;li&gt;Mad Kristensen&amp;#8217;s &lt;a href='http://visualstudiogallery.msdn.microsoft.com/a15c3ce9-f58f-42b7-8668-53f6cdc2cd83'&gt;Web Standards Update&lt;/a&gt; for HTML5 and CSS3 intellisense support&lt;/li&gt;

&lt;li&gt;Mad Kristensen&amp;#8217;s &lt;a href='http://visualstudiogallery.msdn.microsoft.com/a56eddd3-d79b-48ac-8c8f-2db06ade77c3'&gt;Image Optimizer&lt;/a&gt; extension for squashing images used by your themes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Themes evolve around CSS and images, so now let&amp;#8217;s see how we should structure our &amp;#8220;assets&amp;#8221; folder to store our stuff.&lt;/p&gt;

&lt;h3 id='breakout_your_foundation_css'&gt;Break-out your Foundation CSS&lt;/h3&gt;

&lt;p&gt;If you are serious about building your website or application then you will surely have to leverage some sort of widely-accepted base/grid system. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href='http://html5boilerplate.com'&gt;HTML5 Boilerplate&lt;/a&gt; for cross-browser HTML5 ready HTML/CSS template&lt;/li&gt;

&lt;li&gt;Any CSS Grid framework such as &lt;a href='http://960.gs'&gt;960&lt;/a&gt; to bring uniformity to your layouts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, you have to keep your &amp;#8220;foundation&amp;#8221; stylesheets separate from &amp;#8220;presentation&amp;#8221; stylesheets (which are theme specific).&lt;/p&gt;

&lt;p&gt;&lt;img alt='Separate CSS' src='/images/theme-split.png' /&gt;&lt;/p&gt;

&lt;p&gt;Note how the core stylesheets are outside of the &amp;#8220;default&amp;#8221; theme folder.&lt;/p&gt;

&lt;h3 id='organize_images_folder'&gt;Organize Images Folder&lt;/h3&gt;

&lt;p&gt;Images should be organized to ensure theme specific images are kept away from &amp;#8220;meta&amp;#8221; level images.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme images' src='/images/theme-images.png' /&gt;&lt;/p&gt;

&lt;p&gt;Notice how the &amp;#8220;default&amp;#8221; theme images folder lives inside a &amp;#8220;design&amp;#8221; folder whilst &amp;#8220;meta&amp;#8221; images are completely ring-fenced. This can be hard to refactor afterwards so get it done right from day one.&lt;/p&gt;

&lt;h3 id='folder_structures_by_theme_by_platform'&gt;Folder Structures By Theme, By Platform&lt;/h3&gt;

&lt;p&gt;How can you structure theme stylesheets that cater for both desktops and mobile devices?&lt;/p&gt;

&lt;p&gt;What about controlling common CSS elements that are used by desktops and mobile devices?&lt;/p&gt;

&lt;p&gt;What about common page specifics that do not change between themes?&lt;/p&gt;

&lt;p&gt;We can address all these issues by carefully structuring our style assets:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme structure' src='/images/theme-structure.png' /&gt;&lt;/p&gt;

&lt;p&gt;So now we can have different themes and within each theme we can support platform specific styling. As a bonus we also have a &amp;#8220;global&amp;#8221; stylesheet that contains common CSS elements applicable to all platforms and themes.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s what we mean by &lt;strong&gt;Stop-Think-Structure&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id='sass_and_nested_css_files'&gt;Sass and Nested CSS Files&lt;/h3&gt;

&lt;p&gt;Next step is to arrange &amp;#8220;nested&amp;#8221; stylesheets in a manageable manner. Enter Sass:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Sass is a meta-language on top of CSS that&amp;#8217;s used to describe the style of a document cleanly and structurally, with more power than flat CSS allows. Sass both provides a simpler, more elegant syntax for CSS and implements various features that are useful for creating manageable stylesheets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are three levels of nesting that we can employ:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme levels' src='/images/theme-levels.png' /&gt;&lt;/p&gt;

&lt;h3 id='level_0__globalscss'&gt;Level 0 - global.scss&lt;/h3&gt;

&lt;p&gt;This stylesheet contains theme-neutral variables and styles including re-usable Sass &amp;#8220;mixins&amp;#8221; (that can be thought of as CSS functions). The contents of this &amp;#8220;global&amp;#8221; stylesheet will be available to all themes.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme level 0' src='/images/theme-level0.png' /&gt;&lt;/p&gt;

&lt;h3 id='level_1__themescss'&gt;Level 1 - theme.scss&lt;/h3&gt;

&lt;p&gt;Next up is the theme specific stylesheet that includes all the reusable stuff from our &amp;#8220;global&amp;#8221; stylesheet above.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme level 1' src='/images/theme-level1.png' /&gt;&lt;/p&gt;

&lt;p&gt;We specify the theme colors and other theme specific stuff.&lt;/p&gt;

&lt;h3 id='level_2__desktopscss_and_mobilescss'&gt;Level 2 - desktop.scss and mobile.scss&lt;/h3&gt;

&lt;p&gt;These platform specific stylesheets are BOTH theme and platform specific and extend the &amp;#8216;theme&amp;#8217; stylesheet above.&lt;/p&gt;

&lt;p&gt;We can now set up the &amp;#8216;desktop.scss&amp;#8217; stylesheet with styling that is relevant for serving content to desktop browsers.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme level 2' src='/images/theme-level2a.png' /&gt;&lt;/p&gt;

&lt;p&gt;Similarly, we can do different styling for mobile devices using the &amp;#8216;mobile.scss&amp;#8217; file.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme level 2' src='/images/theme-level2b.png' /&gt;&lt;/p&gt;

&lt;p&gt;We could use a SINGLE stylesheet for both desktop and mobile devices and leverage CSS Media Queries.&lt;/p&gt;

&lt;p&gt;We have chosen to split out CSS for desktop and mobile. The next blog post in this mini-series will show you how we build upon these by using different Master Pages with the new MVC4 mobile features.&lt;/p&gt;

&lt;h3 id='reference_theme_in_master_pages'&gt;Reference Theme In Master Pages&lt;/h3&gt;

&lt;p&gt;Now all your master pages can simply reference the required theme for the user:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Theme reference' src='/images/theme-reference.png' /&gt;&lt;/p&gt;

&lt;p&gt;You can simply expose the theme name from your &lt;a href='http://haacked.com/archive/2011/02/21/changing-base-type-of-a-razor-view.aspx'&gt;BaseViewPage&lt;/a&gt; implementation:&lt;/p&gt;

&lt;p&gt;&lt;img alt='Base View Page' src='/images/theme-baseviewpage.png' /&gt;&lt;/p&gt;

&lt;p&gt;By using our own BaseViewPage implementation we can centralize and inject non-view-model stuff into all view pages.&lt;/p&gt;

&lt;h3 id='phew'&gt;Phew!&lt;/h3&gt;

&lt;p&gt;Wow. Nested stylesheets. Split by desktop and mobile devices.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s the price that we have to pay as an ISV building products - complexity comes with the territory as we are not building yet-another-intranet-app. The CSS is layered for a reason and no doubt there could be ways to optimize this setup - there are a couple areas of improvement that I will cover off in the during the course of this mini-series.&lt;/p&gt;

&lt;h3 id='finally_a_sass_tip_for_developers'&gt;Finally, a Sass Tip For Developers&lt;/h3&gt;

&lt;p&gt;I love my Designers.&lt;/p&gt;

&lt;p&gt;But sometimes I wonder when I ask for a color code if they are just making up hex numbers. EAEAEA. F4D3AF. 4C4C4C. F5F5F5?!&lt;/p&gt;

&lt;p&gt;As a developer it drives me crazy to see two dozen hex color codes in my CSS. So try to work with a core half dozen colors and then leverage some Sass &amp;#8220;darken&amp;#8221; and &amp;#8220;lighten&amp;#8221; magic to create additional color shades!&lt;/p&gt;

&lt;p&gt;&lt;img alt='Sass Magic' src='/images/theme-sass.png' /&gt;&lt;/p&gt;

&lt;p&gt;That works for me.&lt;/p&gt;

&lt;h3 id='further_reading'&gt;Further Reading&lt;/h3&gt;

&lt;p&gt;An interesting blog post by Jason Grigsby entitled &lt;a href='http://www.cloudfour.com/css-media-query-for-mobile-is-fools-gold'&gt;CSS Media Query for Mobile is Fool&amp;#8217;s Gold&lt;/a&gt;.&lt;/p&gt;</description>
				<published>2012-01-23 00:00:00 +0000</published>
				<link>http://www.collectivematters.com/2012/01/solving-real-world-theming-challenges-with-mvc4-and-sass</link>
			</item>
		
			<item>
				<title>Tips for a YSlow 'Grade A' website with ASP.NET MVC 4</title>
				<description>&lt;p&gt;The first in a mini-series about how my team builds software with ASP.NET MVC4 and our perspective as a .NET shop.&lt;/p&gt;

&lt;p&gt;We re-launched one of our &lt;a href='http://www.geminiplatform.com'&gt;websites&lt;/a&gt; on Christmas Eve to freshen things up a little and this time around we dropped the CMS platform and went straight onto ASP.NET MVC 4. Shock. Horror. No CMS. Using beta status framework on a revenue generating dotcom. What next?!&lt;/p&gt;

&lt;p&gt;One of the main goals of the website refresh was performance. We used &lt;a href='http://developer.yahoo.com/yslow'&gt;Yahoo! YSlow&lt;/a&gt; as our guide to getting towards the &amp;#8216;Grade A&amp;#8217; rating. We learnt some lessons along the way as well as using some great free tools that deserve a mention.&lt;/p&gt;

&lt;p&gt;But why jump to MVC 4 when MVC 3 is current and stable release? Simple. We are Developers and are hooked on playing with the latest gadgets - that&amp;#8217;s what we do and live for. No other compelling reason.&lt;/p&gt;

&lt;p&gt;The main focus was on putting in place a CDN to serve static content given that our traffic sources are worldwide and first impressions count for new visitors.&lt;/p&gt;

&lt;h3 id='core_development_toolbox'&gt;Core Development Toolbox&lt;/h3&gt;

&lt;p&gt;A simple yet indispensable list of tools to help ensure we got good dotcom performance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Style sheets with &lt;a href='http://sass-lang.com'&gt;Sass&lt;/a&gt; to leverage things like variables for common color codes, etc.&lt;/li&gt;

&lt;li&gt;Mindscape&amp;#8217;s &lt;a href='http://visualstudiogallery.msdn.microsoft.com/2b96d16a-c986-4501-8f97-8008f9db141a'&gt;Web Workbench&lt;/a&gt; - works well within Visual Studio for Sass stylesheets.&lt;/li&gt;

&lt;li&gt;The &lt;a href='http://ajaxmin.codeplex.com'&gt;Microsoft Ajax Minifier&lt;/a&gt; is a no-brainer for minifying your assets&lt;/li&gt;

&lt;li&gt;Nice web fonts sourced from either &lt;a href='http://www.google.com/webfonts'&gt;Google Fonts&lt;/a&gt; (free) or &lt;a href='https://typekit.com'&gt;Typekit&lt;/a&gt; (paid)&lt;/li&gt;

&lt;li&gt;Mad Kristensen&amp;#8217;s Web Essentials extension for Visual Studio - read &lt;a href='http://www.hanselman.com/blog/UsefulVisualStudioExtensionWebEssentialsFromMadsKristensen.aspx'&gt;Scott Hanselman&amp;#8217;s overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='choose_your_cdn'&gt;Choose Your CDN&lt;/h3&gt;

&lt;p&gt;There&amp;#8217;s no reason not to use a CDN service such as &lt;a href='http://aws.amazon.com/cloudfront'&gt;Amazon CloudFront&lt;/a&gt; or &lt;a href='&amp;lt;https://www.windowsazure.com/en-us/home/tour/cdn/'&gt;Windows Azure&lt;/a&gt;. In fact if you want that YSlow &amp;#8216;Grade A&amp;#8217; rating you will need a CDN to serve up your static content.&lt;/p&gt;

&lt;p&gt;If 80% of end-user response time is spent downloading things like images, stylesheets and scripts, then doesn&amp;#8217;t it make sense to spread the load? Read the &lt;a href='http://developer.yahoo.com/performance/rules.html#cdn'&gt;advice&lt;/a&gt; of the Yahoo! Exceptional Performance team on CDN and make up your own mind.&lt;/p&gt;

&lt;h3 id='mirror_your_cdn'&gt;Mirror Your CDN&lt;/h3&gt;

&lt;p&gt;Regardless of your CDN choice you will still need to create those static files inside your Visual Studio project and work with them locally.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Assets folder' src='/images/yslow-assets-folder.png' /&gt;&lt;/p&gt;

&lt;p&gt;Once you have your assets in place you should mirror the same folder structure on your CDN. This will allow you to switch between locally deployed assets and those on the CDN. Here&amp;#8217;s a screenshot showing the mirrored folder structure on Amazon CloudFront.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Amazon Assets folder' src='/images/yslow-assets-folder-amazon.png' /&gt;&lt;/p&gt;

&lt;p&gt;We use &lt;a href='http://www.cloudberrylab.com/'&gt;CloudBerry Lab&amp;#8217;s&lt;/a&gt; cloud storage tools as they provide freeware tools to manage Amazon CloudFront, Windows Azure and other platforms.&lt;/p&gt;

&lt;h3 id='integrate_microsoft_ajax_minifier_in_your_build'&gt;Integrate Microsoft Ajax Minifier in your Build&lt;/h3&gt;

&lt;p&gt;Minifing your static assets such as stylesheets and scripts is expected and the right thing to do if you want to squeeze out performance.&lt;/p&gt;

&lt;p&gt;Install the Microsoft Ajax Minifier and then do the magic in your projects Post-build event.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Microsoft Ajax Minifier' src='/images/yslow-minifier.png' /&gt;&lt;/p&gt;

&lt;p&gt;You should minify your stylesheets into a single file and your script into another file. Example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$(SolutionDir)\Build\AjaxMin.exe
$(ProjectDir)assets\scripts\jquery.min.js.
$(ProjectDir)assets\scripts\jquery.nivo.slider.js
$(ProjectDir)assets\scripts\jquery.validate.js
$(ProjectDir)assets\scripts\site.js
-out $(ProjectDir)assets\scripts\all.min.js -clobber&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will need to reference individual files as per above - didn&amp;#8217;t find a wildcard switch to accept multiple files.&lt;/p&gt;

&lt;h3 id='reference_cdn_assets_or_local_assets'&gt;Reference CDN Assets (or local assets)&lt;/h3&gt;

&lt;p&gt;Even with the resilience that CDN&amp;#8217;s bring, we still insisted that switching between locally available static assets or those on the CDN should be pretty straightforward.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Reference CDN Assets' src='/images/yslow-localpth.png' /&gt;&lt;/p&gt;

&lt;p&gt;Did you notice the &amp;#8216;AssetsPath&amp;#8217; reference above? This will either contain a local path or one that points towards the CDN. You can expose this variable to all your ASP.NET MVC views by using a custom &lt;a href='http://msdn.microsoft.com/en-us/library/system.web.mvc.webviewpage(v=vs.98'&gt;WebViewPage&lt;/a&gt;.aspx). You simply register your own View Page by editing the &amp;#8220;web.config&amp;#8221; file that resides &lt;strong&gt;inside your &amp;#8220;Views&amp;#8221; folder&lt;/strong&gt; and reference your own &amp;#8220;Web View Page&amp;#8221; base class.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Using own Web View Page' src='/images/yslow-config.png' /&gt;&lt;/p&gt;

&lt;p&gt;And finally here is our implementation that exposes the correct assets path (yes, you could make this a configuration option).&lt;/p&gt;

&lt;p&gt;&lt;img alt='Assets path switch' src='/images/yslow-path.png' /&gt;&lt;/p&gt;

&lt;h3 id='manage_cdn_contents__watch_out'&gt;Manage CDN Contents - watch out!&lt;/h3&gt;

&lt;p&gt;At this point:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You have assets both locally and on your CDN&lt;/li&gt;

&lt;li&gt;Your assets are automatically minified as part of your build process&lt;/li&gt;

&lt;li&gt;You views can reference either local or CDN assets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The CloudBerry tools are a great way to upload your assets to your CDN. But there are a couple of gotcha&amp;#8217;s that you need to be aware - as we found out along the way.&lt;/p&gt;

&lt;h3 id='gotcha_1__filename_case_sensitivity'&gt;Gotcha 1 - Filename Case Sensitivity&lt;/h3&gt;

&lt;p&gt;For consistencies sake, lower case all your asset filenames such as images, scripts and stylesheets. If you don&amp;#8217;t Amazon, will chuck something like this back at you.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Assets filename casing' src='/images/yslow-casing.png' /&gt;&lt;/p&gt;

&lt;p&gt;Bottom line is that casing matters on Amazon CloudFront.&lt;/p&gt;

&lt;h3 id='gotcha_2__expires_header'&gt;Gotcha 2 - Expires Header&lt;/h3&gt;

&lt;p&gt;Each time you upload a file to Amazon CloudFront you will have to set the Expires header or Yahoo! YSlow will &lt;a href='http://developer.yahoo.com/performance/rules.html#expires'&gt;complain&lt;/a&gt; that you have not set them. Setting Expires will ensure that after the initial page load your website visitors will not need to download static content again.&lt;/p&gt;

&lt;p&gt;In CloudBerry you can specify Expires Header for any content on your CDN.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Assets file expires' src='/images/yslow-expires.png' /&gt;&lt;/p&gt;

&lt;p&gt;Thankfully you can set these headers on folders for recursive goodness.&lt;/p&gt;

&lt;h3 id='gotcha_3__public_access'&gt;Gotcha 3 - Public Access&lt;/h3&gt;

&lt;p&gt;By default when assets are uploaded to Amazon CloudFront they are not publically accessible – that&amp;#8217;s not good when you consider your assets need to be accessible by everyone that visits your website.&lt;/p&gt;

&lt;p&gt;Again, CloudBerry provides a way for you to ensure all assets are public.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Access control list' src='/images/yslow-acl.png' /&gt;&lt;/p&gt;

&lt;p&gt;These gotchas can initially result in Yahoo! YSlow not showing what you expect in terms of website performance best practice.&lt;/p&gt;

&lt;h3 id='yahoo_yslow_and_that_grade_a'&gt;Yahoo! YSlow (and that &amp;#8216;Grade A&amp;#8217;)&lt;/h3&gt;

&lt;p&gt;Finally, go and install the Yahoo! YSlow extension for your web browser and test website performance.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Install YSlow' src='/images/yslow-install.png' /&gt;&lt;/p&gt;

&lt;p&gt;When you first run the test you may have to do a couple of things to tell this tool what&amp;#8217;s what in order to get an accurate grading. This usually means telling YSlow about your CDN.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Set CDN' src='/images/yslow-setcdn.png' /&gt;&lt;/p&gt;

&lt;p&gt;Once YSlow know about your CDN, all your previous work setting up CDN, Expires headers, minification should pay off with a nice &amp;#8216;Grade A&amp;#8217;.&lt;/p&gt;

&lt;p&gt;&lt;img alt='YSlow Grade A' src='/images/yslow-result.png' /&gt;&lt;/p&gt;

&lt;p&gt;There&amp;#8217;s nothing more pleasing than a job well done!&lt;/p&gt;

&lt;h3 id='summary'&gt;Summary&lt;/h3&gt;

&lt;p&gt;Building a website using the ASP.NET MVC framework that &lt;strong&gt;performs&lt;/strong&gt; according to best practice can be accomplished with the right tools.&lt;/p&gt;

&lt;p&gt;Some essential tools to help you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CloudBerry Labs &lt;a href='http://www.cloudberrylab.com'&gt;cloud storage tools&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://visualstudiogallery.msdn.microsoft.com/2b96d16a-c986-4501-8f97-8008f9db141a'&gt;Web Workbench&lt;/a&gt; + &lt;a href='http://sass-lang.com/'&gt;Sass&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://ajaxmin.codeplex.com'&gt;Microsoft Ajax Minifier&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://www.google.com/webfonts'&gt;Google Fonts&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href='http://visualstudiogallery.msdn.microsoft.com/6ed4c78f-a23e-49ad-b5fd-369af0c2107f'&gt;Mad Kristensen&amp;#8217;s Web Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope this helps you at some point and here is our end result: &lt;a href='http://www.geminiplatform.com'&gt;http://www.geminiplatform.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more easy to implement performance tips check out Troy Hunt&amp;#8217;s &lt;a href='http://www.troyhunt.com/2011/12/beyond-yslow-squeeeezing-out-website.html'&gt;Beyond YSlow - Squeeeezing out website network performance&lt;/a&gt; blog post.&lt;/p&gt;</description>
				<published>2012-01-08 00:00:00 +0000</published>
				<link>http://www.collectivematters.com/2012/01/tips-for-a-yahoo-yslow-grade-a-website-with-asp-net-mvc</link>
			</item>
		
			<item>
				<title>Lesson in Linking End Users, Help Desk, Project Management and Software Development</title>
				<description>&lt;p&gt;Picture this scene:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are an international organization that has a presence in most countries worldwide.&lt;/li&gt;

&lt;li&gt;You produce goods in factories that are sold to consumers through the retail channel.&lt;/li&gt;

&lt;li&gt;You leverage internally maintained ERP software and other line-of-business applications to keep operations running.&lt;/li&gt;

&lt;li&gt;You are always growing the business by company acquisitions and each new entity you bring in needs to migrate over to existing ERP and other technology platforms.&lt;/li&gt;

&lt;li&gt;Employees around the world expect formal IT support, project management for the ERP and other software deployed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;#8217;s pretty clear to state that software development, project management and help desk capabilities are at the front lines of such an organization. They are centralized but serve all divisions around the globe.&lt;/p&gt;

&lt;p&gt;When you have centralized IT powering the organization through internally developed and maintained systems, there really is no place to hide and no room for mistakes. IT is critical and the teams within IT are held to account every day.&lt;/p&gt;

&lt;p&gt;IT handle and respond to Bug Reports, Change Requests, New Feature Requests, Investigations, System Access Requests, and so on.&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s a large, watchful IT operation that is generally typical of any blue chip who utilizes IT to deliver business benefit.&lt;/p&gt;

&lt;h3 id='the_help_desk_challenge'&gt;The Help Desk Challenge&lt;/h3&gt;

&lt;p&gt;Centralized help desk support the different business units based around the world. End users in such countries make use of the central help desk when reporting problems, requesting enhancements and help using the deployed IT.&lt;/p&gt;

&lt;p&gt;Here is a typical flow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Assess and prioritize support tickets from users around the world who expect a certain level of service.&lt;/li&gt;

&lt;li&gt;Liaise with business, process and IT specialists to validate each and every request to ensure ticket outcomes are consistent with IT, legal, and corporate guidelines and strategy.&lt;/li&gt;

&lt;li&gt;Liaise with software development team to understand technical implications and possible solutions.&lt;/li&gt;

&lt;li&gt;Coordinate with project management to ascertain development and delivery schedules.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id='the_project_management_challenge'&gt;The Project Management Challenge&lt;/h3&gt;

&lt;p&gt;Project Management teams handle IT roll-outs at new locations around the globe.&lt;/p&gt;

&lt;p&gt;But as soon as you complete the current IT refresh cycle the next cycle of IT software updates are almost ready to be rolled out. It&amp;#8217;s a never ending cycle of change that drives the business forward in terms of capability, operational efficiency and manufacturing optimization.&lt;/p&gt;

&lt;p&gt;Every location demands that they receive a different flavor of ERP systems because they have special requirements like no other. But the Project Management mandate states that IT systems must be centralized to the maximum and deviations will only permitted under the strictest of corporate guidelines.&lt;/p&gt;

&lt;p&gt;Post go-live all support then is shifted from in-the-field Project Management to the centralized support desk.&lt;/p&gt;

&lt;h3 id='end_users_of_it_applications'&gt;End Users (of IT Applications)&lt;/h3&gt;

&lt;p&gt;Users just want things to function to make things easier and to keep the business ticking over when targets and metrics have to met and reported back to HQ.&lt;/p&gt;

&lt;p&gt;Small local, first-line support teams are in the trenches and face-off with business people inside factories, sales, finance and marketing operations. IT should be silent and work without glitches - and when they request changes or report problems they expect service every day of the week.&lt;/p&gt;

&lt;h3 id='the_software_development_sandwich'&gt;The Software Development Sandwich&lt;/h3&gt;

&lt;p&gt;In between Project Management and the Support Desk sit the organizations centralized software development team.&lt;/p&gt;

&lt;p&gt;Continuous software application improvements are the order of the day whilst trying to build and maintain software that is all things to all men. No software team wants to support multiple variants of the same core application - it&amp;#8217;s a Developer and Tester nightmare.&lt;/p&gt;

&lt;h3 id='and_the_humble_unifying_issue_tracker'&gt;&amp;#8230;And The Humble (Unifying) Issue Tracker&lt;/h3&gt;

&lt;p&gt;The challenge was to get different teams, in different locations, with different objectives working from a single platform in terms of tracking support requests, change management whilst ensuring effective communication coupled with understandable and transparent workflow.&lt;/p&gt;

&lt;p&gt;A week long workshop was instigated where a single representative from each stakeholder group (users, project management, support desk, development) attended and thrashed out the initial implementation of unified project and support platform based on an issue tracker. Face to face, truly agile in every sense of word with phone calls and emails to wider team members asking for immediate unconditional feedback as initial decisions were taken during the workshop.&lt;/p&gt;

&lt;p&gt;It was understood from day one that EVERYONE involved would have to give and take. Nobody gets their way 100% of the time and everyone has to compromise for the greater good of the organization. Senior Managers were told to &amp;#8220;butt out&amp;#8221; and let their staff make the decisions as they are the closest to the action. People are paid to do a job and usually respond better when you give them a chance to perform. That was the case.&lt;/p&gt;

&lt;p&gt;During that workshop week the following was achieved:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All processes that would be managed by the issue tracker were identified and minimized in terms of their footprint.&lt;/li&gt;

&lt;li&gt;Data entry and viewing screens were established per process and varied to factor in permissions and process stage.&lt;/li&gt;

&lt;li&gt;Workflow per process was defined ensuring at all times that &amp;#8220;Janet&amp;#8221; sitting in the corner could understand how things generally flowed.&lt;/li&gt;

&lt;li&gt;Initial projects were created catering for both support desk and project implementation teams.&lt;/li&gt;

&lt;li&gt;Users and their permissions were identified and set up so as to minimize on-going maintenance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All this was achieved by the end of Day Four. Remarkable given we started from scratch Monday morning and worked regular 9-to-6 hours. Immense synergy within the small workshop team.&lt;/p&gt;

&lt;p&gt;End result? One issue tracker deployed to a single web server and accessible by all who needed it through the browser of their choice (OK, IE6 was killed off!).&lt;/p&gt;

&lt;p&gt;On Day Five it was time to kick the tires:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simulation testing using real user accounts that represented each stakeholder group.&lt;/li&gt;

&lt;li&gt;The Change Request process was first simulated using a routine request-and-response with no dramas.&lt;/li&gt;

&lt;li&gt;Next up a more challenging Change Request process was simulated where review-reject-revisit-approve cycle tested communication and workflow steps.&lt;/li&gt;

&lt;li&gt;Then a Change Request &amp;#8220;from hell&amp;#8221; process was tested where multiple &amp;#8220;sub-tasks&amp;#8221; were spun off affecting multiple business units, geographies, with a &amp;#8220;failed&amp;#8221; go-live deployment thrown in for good measure.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Suffice to say refinements occurred during the simulations but everyone felt very happy knowing full well that we had a solid starting place.&lt;/p&gt;

&lt;p&gt;Don&amp;#8217;t expect everything to be perfect from Day One, edge cases will crop up, and we are all expected to tolerate and refine as we go along. That was the key message that was pushed home at every opportunity to all concerned (and everyone got it).&lt;/p&gt;

&lt;p&gt;It can be done because it has been done. Here are the key ingredients to make it happen for you as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Involvement of operational experience experts from different disciplines.&lt;/li&gt;

&lt;li&gt;Willingness to compromise when required.&lt;/li&gt;

&lt;li&gt;Agile approach from all stakeholder groups before, during and after.&lt;/li&gt;

&lt;li&gt;One workshop leader who has been in the trenches within Support, Development and Project Management disciplines.&lt;/li&gt;

&lt;li&gt;And a versatile issue management platform.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proof that we can accomplish anything if we work together.&lt;/p&gt;</description>
				<published>2011-11-10 00:00:00 +0000</published>
				<link>http://www.collectivematters.com/2011/11/linking-end-users-help-desk-project-management-software-development</link>
			</item>
		
			<item>
				<title>Five Mistakes That Can Kill Your Issue Tracker (and how to fix them)</title>
				<description>&lt;p&gt;You spend all that money on &lt;a href='http://www.geminiplatform.com'&gt;issue tracking or project management software&lt;/a&gt; and yet it fails miserably at some point after deployment. If your issue tracker of choice is not set up correctly people will just stop using it, move to other systems, or even resort to email.&lt;/p&gt;

&lt;p&gt;So here are the top mistakes that we see time and time again.&lt;/p&gt;

&lt;h3 id='1_not_understanding_projects_and_users'&gt;1. Not Understanding Projects and Users&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Are we managing both &amp;#8220;Support&amp;#8221; and &amp;#8220;Development&amp;#8221; projects?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Will we allow our customers access?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not taking the time to select which project types will be managed will lead to issues, tickets, bugs, change requests being pushed into places where they don&amp;#8217;t belong. Nothing worse than having support tickets dumped into Development projects, right?&lt;/p&gt;

&lt;p&gt;Excluding users or not thinking through who else needs participate won&amp;#8217;t help your workflow and will probably result in other systems being introduced. It&amp;#8217;s never good having two tracking systems to manage projects.&lt;/p&gt;

&lt;p&gt;What you need to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;List projects (current and future) that can be included&lt;/li&gt;

&lt;li&gt;List user groups that might require project participation (e.g. Testers, Developers, Clients)&lt;/li&gt;

&lt;li&gt;Map out logical project groupings and link them to user groups&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='2_not_knowing_which_process_to_manage'&gt;2. Not Knowing Which Process To Manage&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Which internal business processes (e.g. Change Request, Defect) are we managing with the issue tracker?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Which external-facing business processes (e.g. Support Ticket, Investigation) are we managing with the issue tracker?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Without a clear list of processes to be managed, confusion and frustration will rise because people might not realize which items should be pushed into the issue tracker. People then gradually stop logging items leading to a declining user base.&lt;/p&gt;

&lt;p&gt;What you need to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;List internal and external processes to be managed&lt;/li&gt;

&lt;li&gt;Identify projects to be managed&lt;/li&gt;

&lt;li&gt;Map business processes to projects&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='3_not_asking_the_right_questions'&gt;3. Not Asking The Right Questions&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;What data fields does the user fill in when logging Defects and when raising Change Requests?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Which custom data fields need to be added to the platform (e.g. &amp;#8220;Client Name&amp;#8221;, &amp;#8220;Internal Build Number&amp;#8221;)? Is too much information presented on screen during issue logging?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Asking for too much or too little information when logging new issues can prevent users from actually using the system or becoming frustrated by irrelevant input prompts.&lt;/p&gt;

&lt;p&gt;The wrong questions being asked will also alienate users from your issue tracker – only ask relevant questions when you are looking to collect data for a specific process.&lt;/p&gt;

&lt;p&gt;What you need to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Determine which data fields are required per process&lt;/li&gt;

&lt;li&gt;Identify mandatory data fields and any required custom fields&lt;/li&gt;

&lt;li&gt;Consider the difference between data entry when creating and editing an item&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='4_not_considering_external_participants'&gt;4. Not Considering External Participants&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Which external entities need access to the platform to view, update and close tasks?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;Do we have external team members who work on project deliverables?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;What data visibility considerations do we need to consider across organizations?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Without understanding how external users might impact data within your issue tracker, you might put in place project structures, permissions and a working culture that will require overhaul if and when you decide to allow external project participants.&lt;/p&gt;

&lt;p&gt;When internal users are not aware of external participants, the lack of appreciation of sensitive information can lead to problems.&lt;/p&gt;

&lt;p&gt;What you need to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Determine what access external participants require&lt;/li&gt;

&lt;li&gt;Determine whether external participants require help desk or project team member status&lt;/li&gt;

&lt;li&gt;Publish guidelines on when internal users should leverage Issue and Comment visibility to suppress information from external users&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='5_not_being_agile'&gt;5. Not Being Agile&lt;/h3&gt;

&lt;p&gt;Mapping out every single possible usage scenario, supporting edge cases, tuning for the perfect state is a sure fire way of killing off your issue tracker before it even gets off the ground.&lt;/p&gt;

&lt;p&gt;Building convoluted workflows that seem to cover every angle will just make things less transparent to the average user.&lt;/p&gt;

&lt;p&gt;Being agile means starting small and heading in the right direction with gradual adjustments (and not thinking up every scenario from day one).&lt;/p&gt;

&lt;p&gt;What you need to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Analyze less, use more&lt;/li&gt;

&lt;li&gt;Take the Agile approach and iterate you way to a better issue tracker deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;End result? An optimized issue management platform that does not get in the way of doing your day job.&lt;/p&gt;</description>
				<published>2011-09-05 00:00:00 +0100</published>
				<link>http://www.collectivematters.com/2011/09/five-mistakes-that-can-kill-your-issue-tracker</link>
			</item>
		
			<item>
				<title>Nimble Testing</title>
				<description>&lt;p&gt;When I was a young man working a brief stint in sales support, the chief salesman told me in the gravest tone possible never to use the word &amp;#8216;complicated&amp;#8217; when I meant &amp;#8216;sophisticated&amp;#8217; or &amp;#8216;lightweight&amp;#8217; when I meant &amp;#8216;flexible&amp;#8217;, because in software these terms are not synonymous and the distinction is important. At Countersoft we have other terms that are not synonymous and we prefer the term &amp;#8216;nimble&amp;#8217; to &amp;#8216;agile&amp;#8217;, not just because agile can be interpreted as both a characteristic of software and a software development methodology, but because despite the ethos of the Agile methodology being represented in its name, much of the software that its proponents are forced to use is far from nimble.&lt;/p&gt;

&lt;p&gt;What do we mean by nimble? Well, we mean that it is easily molded to be fit for purpose. This of course means that it is sophisticated because the one thing that is abundantly clear to us is that people are so inventive they can find many purposes for the same thing. Gemini, for instance, is designed to be perfect for Bug Tracking, Issue Tracking and Project Management. It is also used by some of our clients to track purchases and by others to co-ordinate marketing campaigns. Who are we to say that Gemini should only be used for Bug Tracking, Issue Tracking and Project Management? If we created a rigid, inflexible application it could be argued that it would better fit its &amp;#8216;purpose&amp;#8217; but that would be the inventor&amp;#8217;s purpose not the user&amp;#8217;s purpose and what good would that be to the user? If we tried to make a rigid application fit multiple purposes then we would have replaced sophistication with complexity and that would suit nobody.&lt;/p&gt;

&lt;p&gt;For some time our users have been telling us that this type of sophisticated flexibility is sorely lacking in the Software Testing arena. Our users have had to buy hugely bloated, clunky testing tools that really don&amp;#8217;t deliver value (and of course complicated and expensive go hand in hand). Purple Thinking told us that Software Testing is an area where we should turn our attention because we prosper and grow by responding to the expressed needs of our users.&lt;/p&gt;

&lt;p&gt;It is time to puncture the bloated underbelly and trim the fat. Gemini v4 now includes Software Testing functionality, the Countersoft way - which is testing your way. Of course our Testing functionality is fully integrated with our Bug Tracking, Issue Tracking and Project Management. Of course we deliver the cleanest UI on the market; you (and we) would expect nothing less. The Purple Thinking behind our Testing is that it is designed so that &lt;em&gt;anyone&lt;/em&gt; can do it. We don&amp;#8217;t know who might want to test what in your organization, or even if you will use our Testing functionality for Software Testing. We know that it is not only Testers who understand the importance of testing, Software Developers and Project Managers and Business Analysts have been testing stuff for years. Isn&amp;#8217;t that what the ethos of Agile is, of flexible roles within the development team?&lt;/p&gt;

&lt;p&gt;If your testing software is only usable by a specialist tester, who is the only one who has ever read the instructions of the fat, dust-covered manual on the shelf, then it might be masquerading as Agile but it certainly isn&amp;#8217;t nimble.&lt;/p&gt;

&lt;p&gt;Try Testing in Gemini and see how intuitive it is to use, how clearly it presents its functionality. With custom fields throughout so you can determine everything you want to about your tests, and a simple structure of Folders holding Test Plans, each detailing Test Cases and each Test Case detailing the steps needed to perform the test, anybody can wrap their heads around the functionality in no time. A Test Run then represents what was tested, by whom, when, and the final result of the Testing Cycle.&lt;/p&gt;

&lt;p&gt;Agile Testing is all very well, but Purple Thinking says that all testing, Agile or not, must be nimble.&lt;/p&gt;</description>
				<published>2011-03-28 00:00:00 +0100</published>
				<link>http://www.collectivematters.com/2011/03/nimble-testing-from-countersoft</link>
			</item>
		
			<item>
				<title>The Trouble With...</title>
				<description>&lt;p&gt;Many years ago, a young programmer read John Wyndham&amp;#8217;s &lt;em&gt;Trouble With Lichen&lt;/em&gt; and it was the title as much as the story that stuck with him. That title has become a strand of Purple Thinking and today we apply the &amp;#8216;trouble with&amp;#8230;&amp;#8217; preface to a lot of things as the starting point for understanding what problems exist in our world and how we can address them.&lt;/p&gt;

&lt;p&gt;By way of explanation I shall give you an example:&lt;/p&gt;

&lt;p&gt;A friend recently returned from a tech show, full of the desire to create a paradigm-shifting, consciousness-altering, society-reforming something-or-other. That was where his problem began; he was frustrated because he did not know what the something-or-other could be. He wanted to participate but he did not know how. Listening to his gushing enthusiasm for Twitter and Flikr, and Facebook and blah, it was clear that he was starting from the wrong point – more beige thinking.&lt;/p&gt;

&lt;p&gt;Instead of dwelling on what is good about yesterday&amp;#8217;s inventions that are now commonplace, we should ask &amp;#8216;what&amp;#8217;s the trouble with&amp;#8230;?&amp;#8217;. It is by solving problems that most people do not even recognise that we improve our world and the lives of others. It is in an environment where one makes small, incremental improvements to things that most people consider okay, that invention flourishes.&lt;/p&gt;

&lt;p&gt;I pointed this out to my friend and as a user of much of the technology he was so enthusiastically evangelising it has been heartening since then to see the change in him. Once he started thinking in purple and asked what the trouble with x, y or z might be, he started producing more ideas for smart &amp;#8216;inventions&amp;#8217; than could be developed in ten years!&lt;/p&gt;

&lt;p&gt;At Countersoft, we come up with great ideas for our products because we constantly critique the fruit of our labours. No sooner has one version gone out the door than we begin garnering feedback from our users and brainstorming ideas. Our mantra is: &amp;#8220;We are sorry, but the trouble with the version we just gave you is&amp;#8230;You deserve better and we are working very hard to address this situation for you.&amp;#8221;&amp;#8221;&lt;/p&gt;

&lt;p&gt;We release at least two versions of our products every year because that reflects the rate at which we challenge what is in them. We have no editions because we believe that our customers deserve the best that we can give them. To improve we need participation, but why should anyone participate with a supplier who hides features of their product from them?&lt;/p&gt;

&lt;p&gt;We need a user community that says to us &amp;#8216;thanks, but the trouble with this, that or t&amp;#8217;other is&amp;#8230;&amp;#8217; It might be flattering to be on the Platinum (oooh look at the big boys) edition, but you are by definition part of a small community and the history of human achievement is the history of collaboration. It cannot possibly be to &lt;em&gt;&lt;em&gt;your&lt;/em&gt;&lt;/em&gt; benefit to be part of a reduced user group.&lt;/p&gt;

&lt;p&gt;Join us, think in purple today. If you want to do something interesting, think of something you rely on and like, then think to yourself &amp;#8216;yes, but the trouble with it is&amp;#8230;&amp;#8217;. You might be surprised by what you come up with. Whatever it is, we are sure it will be an improvement.&lt;/p&gt;</description>
				<published>2010-12-20 00:00:00 +0000</published>
				<link>http://www.collectivematters.com/2010/12/the-trouble-with</link>
			</item>
		
			<item>
				<title>A Breed Apart</title>
				<description>&lt;p&gt;A wise man once said &amp;#8220;beware of software developers for they are very chivalrous and will need to find a dragon to slay&amp;#8221;. If you spend as much time as we have around programmers you will know what he meant. Back in the eighties, a smart and eager young COBOL programmer became the butt of many a joke when, entirely unbidden, he wrote some assembler code to read and write records. This he claimed was more efficient than using the equivalent COBOL statements. Now it does not matter if you are technical or not, suffice to say this is the equivalent of putting a small motor in your wall with a gyroscope attached in order to keep your pictures level when you hang them; it might work but it is complete overkill and totally unnecessary. He must have looked at the statements READ RECORD and WRITE RECORD and thought, &amp;#8220;nah, nowhere near challenging enough, I&amp;#8217;ll find out what that does and then improve on it (somehow)&amp;#8221;.&lt;/p&gt;

&lt;p&gt;The knowledge that this type of behaviour is prevalent amongst the technically gifted is what allows urban legends such as the NASA space pen to flourish. This apocryphal story states that while America spent millions developing a pen that would write in zero-gravity space, the Russians simply used pencils. It is a pretty outrageous slur on NASA&amp;#8217;s competence but many of us are prepared to believe it because we just know that huge sums of money are wasted on extravagant technical wizardry to address problems that have a simple, everyday solution.&lt;/p&gt;

&lt;p&gt;When profit-driven business leaders, customer-focused sales executives and pragmatic, non-technical Project Managers face off with overly inventive developers there is always a capacity for misunderstanding and distrust. Sometimes we can laugh at these Quixotic acts of geek chivalry but more often than not we are frustrated and annoyed by them. We shouldn&amp;#8217;t be. The mistake that those who mock and scorn are making is to assume that the world works better if only everyone thought like them. Clearly it would be a general disaster of Orwellian proportions if we were all obsessed with profits, brand identity and timelines. If we lived in a world where nobody really cared to understand how the TV actually worked who would invent the most brilliant labour-saving device known to man: the remote control?&lt;/p&gt;

&lt;p&gt;All forms of creativity left unchecked produces bizarre results. We have only to look at the recent credit crisis to see that financial gurus need checks and balances. Marketing disasters are everywhere. Small fortunes are spent on sales and advertising that produce near zero returns and in some cases are positively harmful to brand identity. Every year, hundreds of projects run by highly-trained, pragmatic and sensible project managers, overrun by millions. In this context, the developer&amp;#8217;s equivalent of writing his own linked list with binary chop algorithm, when the simple statement SEARCH has already been provided by the tool vendor, is a small price to pay for genius on tap.&lt;/p&gt;

&lt;p&gt;And what genius! The next time you might be tempted to poke fun at software developers just remember that every word you read on this website, every phone call you make, every car you drive, every show you watch, every plane you fly in, every-just-about-everything has been studied, mastered and improved by this special breed, who some people will just never understand.&lt;/p&gt;</description>
				<published>2010-11-24 00:00:00 +0000</published>
				<link>http://www.collectivematters.com/2010/11/a-breed-apart</link>
			</item>
		
	</channel>
</rss>
